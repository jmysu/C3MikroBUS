#include <Arduino.h>
#include <Preferences.h>
#include <esp_ota_ops.h>
#include "_main.h"

bool _isOTA=false;
Preferences myPref;

// This will set the otadata to boot from the factory image, ignoring previous OTA updates.     *
//***********************************************************************************************

void backtoFactory(){
  esp_partition_iterator_t  pi ;                                  // Iterator for find
  const esp_partition_t*    factory ;                             // Factory partition  
  esp_err_t                 err ;

  pi = esp_partition_find ( ESP_PARTITION_TYPE_APP,               // Get partition iterator for
                            ESP_PARTITION_SUBTYPE_APP_FACTORY,    // Factory partition
                            "factory" ) ;
  if ( pi == NULL ) {                                             // Check result
        log_e ( "Failed to find factory partition" ) ;
      }
  else {
        factory = esp_partition_get ( pi ) ;                         // Get partition struct
        esp_partition_iterator_release ( pi ) ;                      // Release the iterator
        err = esp_ota_set_boot_partition ( factory ) ;               // Set partition for boot
        if ( err != ESP_OK ) {                                       // Check error
          log_e ( "Failed to set boot partition" ) ;
          }
        else {
          log_w("Back to factory!");
          delay(1000);
          esp_restart() ;                                         // Restart ESP
          }
      }
}


void setup(void) {
  //Serial.begin(115200);
  #if (ARDUINO_USB_CDC_ON_BOOT)
    log_w("USB_CDC_ON_BOOT enabled!");
    if (isUSBCDC()) {
      if (!Serial) {Serial.begin(115200); delay(300);}
      }
  #else
   log_w("USB_CDC_ON_BOOT disabled!");
   if (!Serial) {Serial.begin(115200); delay(300);}       
  #endif

  printESP32info();

  neopixelRGB(8,0,0); //Red
  neopixelSetupBlink(500);//500ms blink
  
  //NVS Udpate
  myPref.begin("my-app", false); //ReadWrite mode
  _isOTA=myPref.getBool("OTA", false);
  log_w("Check NVS: OTA==%s", (_isOTA?"Yes":"No"));
  myPref.putBool("OTA", false); //reset OTA to false
  myPref.end();
  
  
  #if defined(BOARDNAME)
   log_w("C3App on %s started! Long press BootButton for BackToFactory!", String(BOARDNAME).c_str());
  #endif

  Play_RampDown();
  setupButtonBoot();
}

void loop(void) {
  //Check buttonBoot long pressed and back to factory!
  loopButtonBoot();
}